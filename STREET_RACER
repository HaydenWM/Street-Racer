package Connor;

import java.awt.event.ActionEvent;
import java.util.List;

import javax.swing.SwingWorker;

public class Connor extends BackGround {
	
	public static void Connor() {
		SwingWorker worker = new SwingWorker<Boolean, Integer>() {
			  @Override
			  protected Boolean doInBackground() throws Exception {
				  Up.addActionListener((ActionEvent v) -> {
					  System.out.print("Up");	
						if (Pos1 == true) {				
							} else if (Pos2 == true) {
								Pos2 = false;
								Pos1 = true;
								Car.setBounds(25, (int) Position1, 100, 100);
								
							} else if (Pos3 == true) {
								Pos3 = false;
								Pos2 = true;
								Car.setBounds(25, (int) Position2, 100, 100);
							}
						});
						Down.addActionListener((ActionEvent m) -> {
							System.out.print("Down");

							if (Pos1 == true) {
								Pos1 = false;
								Pos2 = true;
								Car.setBounds(25, (int) Position2, 100, 100);
							} else if (Pos2 == true) {
								Pos2 = false;
								Pos3 = true;
								Car.setBounds(25, (int) Position3, 100, 100);
							} else if (Pos3 == true) {
							}
						});

			    // Value transmitted to done()
			    return true;
			  }

			  @Override
			  protected void process(List<Integer> chunks) {
			    // Process results
			  }

			  @Override
			  protected void done() {
			    // Finish sequence
			  }
			};

		
		
	}

}
